TITLE: Formation Python (HAP - 2020/2021)
AUTHOR: Ahmed Ammar {copyright|GPL3} Email:ahmed.ammar@fst.utm.tn at Institut Préparatoire aux Études Scientifiques et Techniques, Université de Carthage.

!bwarning
Le matériel pédagogique est produit dans divers formats pour l’impression et la lecture à l’écran.
Si vous constatez des erreurs signalez-les simplement aux auteurs:
* Les fichiers PDF sont basés sur LaTeX et présentent rarement des problèmes techniques difficiles à corriger.
* Les fichiers HTML, nommés "HTML" et "jupyter/ipython" ci-dessous, appliquent MathJax pour le rendu des formules LaTeX. Cette technologie donne parfois lieu à des échecs inattendus (par exemple, un rendu incorrect dans une page Web malgré la syntaxe correcte de LaTeX dans la formule).
* Consultez les fichiers PDF correspondants si vous trouvez des formules manquantes ou mal rendues dans des fichiers HTML ou jupyter/ipython.
!ewarning
DATE: today

!split
======= Programmation et algorithmique =======
* "Les bases de la programmation avec Python" : "https://colab.research.google.com/github/CodeTunisia/HAP-Python/blob/master/docs/pub/cours1/cours1.ipynb"
* "Instructions itératives" : "https://colab.research.google.com/github/CodeTunisia/HAP-Python/blob/master/docs/pub/td2/td2.ipynb#scrollTo=3T28jFr4fQPp"
* "numpy et matplotlib (cours)" : "https://colab.research.google.com/github/CodeTunisia/HAP-Python/blob/master/docs/pub/cours2/cours2.ipynb"
* "numpy et matplotlib (exercices)" : "https://colab.research.google.com/github/CodeTunisia/HAP-Python/blob/master/docs/pub/TD3/TD3.ipynb"

!split
======= Méthodes numériques pour la physique =======
* "Équations différentielles ordinaires (I)" : "https://colab.research.google.com/github/CodeTunisia/HAP-Python/blob/master/docs/pub/cours3/cours3.ipynb"
* "Équations différentielles ordinaires (II)" : "https://colab.research.google.com/github/CodeTunisia/HAP-Python/blob/master/docs/pub/cours3/ODE1.ipynb"
* "Équations différentielles ordinaires (III)" : "https://colab.research.google.com/github/CodeTunisia/HAP-Python/blob/master/docs/pub/TP_RK4/TPRK4_AttracteurLorenz.ipynb"

* "Intégration numérique (cours)" : "https://colab.research.google.com/github/CodeTunisia/HAP-Python/blob/master/docs/.src/cours4/cours4.ipynb"
* "Intégration numérique (exercices)" : "https://colab.research.google.com/github/CodeTunisia/HAP-Python/blob/master/docs/.src/cours4/TD4.ipynb"


!split
======= Simulations =======
  * "Optique" : "https://colab.research.google.com/github/CodeTunisia/HAP-Python/blob/master/docs/pub/simulations/optique/motivation.ipynb#scrollTo=Gxiqjib0MATb&line=12&uniqifier=1"
  * "Diagramme de rayonnement" : "https://colab.research.google.com/github/CodeTunisia/HAP-Python/blob/master/docs/pub/simulations/antenne/antenne.ipynb#scrollTo=87sOiygLfDxE"
  * "Solution numérique de l'équation de Schrödinger dépendant du temps pour un potentiel arbitraire (Programmation Orientée Objet )" : "https://colab.research.google.com/github/CodeTunisia/HAP-Python/blob/master/docs/pub/simulations/Schrodinger.ipynb"
